import discord
from discord.ext import commands
from discord.utils import get
from discord import app_commands

TOKEN = "MTM5MzY5NTY0NTA1NDkyNjg2OA.G-H78O.gH2wVg5jD5DqA-QM5ONgJ12G7Q9CPpFK-tfF2E"
ROLE_SENIOR = "Senior"
MONITOR_CHANNEL_ID = 1385379151803977839

intents = discord.Intents.all()
bot = commands.Bot(command_prefix="!", intents=intents)
tree = bot.tree  # for slash commands

assign_senior_to_new_members = True  # Always assign by default

@bot.event
async def on_ready():
    print(f"‚úÖ Bot is online as {bot.user}")
    try:
        synced = await tree.sync()
        print(f"üîÅ Synced {len(synced)} slash commands.")
    except Exception as e:
        print(f"‚ùå Failed to sync commands: {e}")

@bot.event
async def on_member_join(member):
    if assign_senior_to_new_members:
        senior_role = get(member.guild.roles, name=ROLE_SENIOR)
        if senior_role:
            try:
                await member.add_roles(senior_role)
                print(f"üëã Assigned {ROLE_SENIOR} to new member {member.name}")
            except Exception as e:
                print(f"‚ùå Error assigning role to {member.name}: {e}")

@bot.event
async def on_message(message):
    await bot.process_commands(message)  # Ensure commands still work
    if message.channel.id == MONITOR_CHANNEL_ID:
        if message.mentions:
            senior_role = get(message.guild.roles, name=ROLE_SENIOR)
            if not senior_role:
                print(f"{ROLE_SENIOR} role not found.")
                return
            for member in message.mentions:
                try:
                    await member.add_roles(senior_role)
                    print(f"‚úÖ Assigned {ROLE_SENIOR} to mentioned: {member.name}")
                except Exception as e:
                    print(f"‚ùå Failed assigning role to {member.name}: {e}")

@tree.command(name="reply", description="Send a message as the bot to a specific channel.")
@app_commands.describe(channel_id="The ID of the channel", message="The message to send")
async def reply(interaction: discord.Interaction, channel_id: str, message: str):
    if not interaction.user.guild_permissions.administrator:
        await interaction.response.send_message("üö´ Only admins can use this command.", ephemeral=True)
        return

    channel = bot.get_channel(int(channel_id))
    if channel is None:
        await interaction.response.send_message("‚ùå Invalid channel ID.", ephemeral=True)
        return

    try:
        await channel.send(message)
        await interaction.response.send_message(f"‚úÖ Sent message to <#{channel_id}>", ephemeral=True)
    except Exception as e:
        await interaction.response.send_message(f"‚ùå Failed to send message: {e}", ephemeral=True)

bot.run(TOKEN)
